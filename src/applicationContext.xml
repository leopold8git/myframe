<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"

	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx 
     	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     	http://www.springframework.org/schema/aop 
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<!-- xmlns:namespace-prefix="namespaceURI" -->
	<context:component-scan base-package="x.y" />
	<!-- Handler mappings   这个不需要配置，它会自动去找@Controller、@RequestMapping等注解 。spring官方文档忽悠人-->
	<!--  
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		 <property name="interceptors"> <bean class="example.MyInterceptor"/> 
			</property> 
	</bean>
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="1000000" />
		 <property name="defaultEncoding" value="utf-8"></property> 
	</bean>
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<!-- <bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">uploadFailure</prop>
			</props>
		</property>
	</bean> -->
	
	<bean class ="org.springframework.web.servlet.mvc.annotation.MyAnnotationMethodHandlerAdapter">
       <property name= "messageConverters" >
             <list>
             <ref bean= "stringHttpMessageConverter"/>
                <!--  <ref bean= "mappingJacksonHttpMessageConverter"/>
                 <ref bean= "jsonHttpMessageConverter"/>           
                 <ref bean= "formHttpMessageConverter"/> -->
             </list>
        </property>
        <!--debug mode  added by zenglp 20150104-->
        <property name="isDebug" value="true"></property>
	</bean>
	<bean id="stringHttpMessageConverter"
	class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
			</list>
		</property>
</bean>
	
	<!--Resolving views -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- dataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	

  <!-- a PlatformTransactionManager is still required -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	<!-- (this dependency is defined somewhere else) -->
  	<property name="dataSource" ref="dataSource"/>
  </bean>
  
  <!-- enable the configuration of transactional behavior based on annotations -->
  <tx:annotation-driven transaction-manager="txManager"/>

	<context:property-placeholder location="classpath:jdbc.properties" />

	<import resource="paramConfig.xml"/>
	<import resource="pages.xml"/>
	<import resource="pages/user.xml"/>
	<import resource="pages/role.xml"/>
	<import resource="pages/user_role.xml"/>
	<import resource="pages/resource.xml"/>
	<import resource="pages/role_resource.xml"/>
	<import resource="pages/operation.xml"/>
	<import resource="pages/resource_operation.xml"/>

    <!-- <mvc:interceptors>
		 <mvc:interceptor>
			 <mvc:mapping path="doLogin.htm"/>
			 <bean class="x.y.interceptor.SessionInterceptor"></bean>
		 </mvc:interceptor>

	 </mvc:interceptors>-->
</beans>